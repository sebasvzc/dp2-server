{
    "swagger": "2.0",
    "info": {
        "title": "Local Test API",
        "description": "Simple CRUD RESTful API in Node.js",
        "version": "0.0.1",
        "license": {
            "name": "Apache License Version 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "servers": [
        {
            "url": "http://172.17.100.20:3000",
            "description": "Local server"
        }
    ],
    "tags": [
        {
            "name": "login-endpoint",
            "description": "Login Endpoint"
        },
        {
            "name": "user-controller",
            "description": "User Controller"
        },
        {
            "name": "client-controller",
            "description": "Client Controller"
        },
        {
            "name": "password-controller",
            "description": "Password Controller"
        },
        {
            "name": "cupon-controller",
            "description": "Cupon Controller"
        }
    ],
    "paths": {
        "/api/user/invite": {
            "post": {
                "tags": [
                    "user-controller"
                ],
                "operationId": "inviteUsingPOST",
                "summary": "Invite User",
                "consumes": [
                    "application/json"
                ],
                "description": "Invite User.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "User",
                        "description": "Request body as following",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string",
                                    "example": "test@test.com"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "statusCode": {
                                    "type": "integer", "example": 400
                                },
                                "message": {
                                    "type": "string", "example": "Invalid request body"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "403": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "statusCode": {
                                    "type": "integer", "example": 403
                                },
                                "message": {
                                    "type": "string", "example": "Email is wrong"
                                }
                            }
                        },
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/user/login": {
            "post": {
                "tags": [
                    "login-endpoint"
                ],
                "operationId": "loginUsingPOST",
                "summary": "Login method to get user JWT data",
                "consumes": [
                    "application/json"
                ],
                "description": "Login method used to authenticate user and get JWT token data.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "login",
                        "description": "Request body as following",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string",
                                    "example": "test@test.com"
                                },
                                "password": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string",
                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC..."
                                },
                                "refreshToken": {
                                    "type": "string",
                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC..."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "statusCode": {
                                    "type": "integer", "example": 401
                                },
                                "message": {
                                    "type": "string", "example": "Authentication failed"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/listusers?query={userEmail}&page={page}&pageSize={pageSize}": {
            "get": {
                "tags": [
                    "user-controller"
                ],
                "operationId": "getUserUsingGET",
                "summary": "Get user / users",
                "consumes": [
                    "application/json"
                ],
                "description": "Fetch the User object based on the provided query parameter. \"test@test.com\" for fetch one user or \"all\" for fetch all users.",
                "parameters": [
                    {
                        "name": "userEmail",
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "description": "Email of the user"
                    },{
                        "name": "page",
                        "required": true,
                        "in": "path",
                        "type": "integer",
                        "description": "Pagina solicitada"
                    },{
                        "name": "pageSize",
                        "required": true,
                        "in": "path",
                        "type": "integer",
                        "description": "Tamanio de pagina solicitada"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/User"
                        },
                        "description": "A JSON array of user information"
                    },
                    "400": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "statusCode": {
                                    "type": "integer", "example": 400
                                },
                                "message": {
                                    "type": "string", "example": "Invalid request body"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "409": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "statusCode": {
                                    "type": "integer", "example": 409
                                },
                                "message": {
                                    "type": "string", "example": "Requested item wasn't found!"
                                }
                            }
                        },
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/user/users/{userEmail}": {
            "put": {
                "tags": [
                    "user-controller"
                ],
                "operationId": "updateUserUsingPUT",
                "summary": "Update User",
                "consumes": [
                    "application/json"
                ],
                "description": "Update User object based on the provided object.",
                "parameters": [
                    {
                        "name": "userEmail",
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "description": "Input the Email of the user which should be updated"
                    },
                    {
                        "in": "body",
                        "name": "updateUser",
                        "description": "Request body as following",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "userName": {
                                    "type": "string",
                                    "example": "test"
                                },
                                "email": {
                                    "type": "string",
                                    "example": "test@test.com"
                                },
                                "password": {
                                    "type": "string"
                                },
                                "role": {
                                    "type": "string",
                                    "example": "user"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "statusCode": {
                                    "type": "integer", "example": 400
                                },
                                "message": {
                                    "type": "string", "example": "Invalid request body"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "403": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "statusCode": {
                                    "type": "integer", "example": 403
                                },
                                "message": {
                                    "type": "string", "example": "Email is duplicate. You don't have permission to perform this operation!"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "409": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "statusCode": {
                                    "type": "integer", "example": 409
                                },
                                "message": {
                                    "type": "string", "example": "Requested email wasn't found!"
                                }
                            }
                        },
                        "description": "Not Found"
                    }
                }
            }, 
            "delete": {
                "tags": [
                    "user-controller"
                ],
                "operationId": "deleteUserUsingPUT",
                "summary": "Delete User",
                "consumes": [
                    "application/json"
                ],
                "description": "Delete User.",
                "parameters": [
                    {
                        "name": "userEmail",
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "description": "Input the Email of the user which should be deleted"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "409": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "statusCode": {
                                    "type": "integer", "example": 409
                                },
                                "message": {
                                    "type": "string", "example": "Requested email wasn't found!"
                                }
                            }
                        },
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/user/signup": {
            "post": {
                "tags": [
                    "user-controller"
                ],
                "operationId": "signupUsingPOST",
                "summary": "Create User",
                "consumes": [
                    "application/json"
                ],
                "description": "Create User.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "User",
                        "description": "Request body as following",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "userName": {
                                    "type": "string",
                                    "example": "test"
                                },
                                "email": {
                                    "type": "string",
                                    "example": "test@test.com"
                                },
                                "password": {
                                    "type": "string"
                                },
                                "role": {
                                    "type": "string",
                                    "example": "user"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "statusCode": {
                                    "type": "integer", "example": 400
                                },
                                "message": {
                                    "type": "string", "example": "Invalid request body"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "403": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "statusCode": {
                                    "type": "integer", "example": 403
                                },
                                "message": {
                                    "type": "string", "example": "Email is duplicate. You don't have permission to perform this operation!"
                                }
                            }
                        },
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/client/signup": {
            "post": {
                "tags": [
                    "client-controller"
                ],
                "operationId": "signupUsingPOST",
                "summary": "Create Client",
                "consumes": [
                    "application/json"
                ],
                "description": "Create client.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "Client",
                        "description": "Request body as following",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "nombre": {
                                    "type": "string",
                                    "example": "Irving"
                                },
                                "email": {
                                    "type": "string",
                                    "example": "test@test.com"
                                },
                                "apellidoPaterno": {
                                    "type": "string",
                                    "example": "Palma"
                                },
                                "apellidoMaterno": {
                                    "type": "string",
                                    "example": "Salas"
                                },
                                "telefono": {
                                    "type": "string"
                                },
                                "contrasenia": {
                                    "type": "string"
                                },
                                "genero": {
                                    "type": "string",
                                    "example": "Masculino"
                                },
                                "fechaNacimiento": {
                                    "type": "Date",
                                    "example": "05/06/1997"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Client"
                        }
                    },
                    "400": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "statusCode": {
                                    "type": "integer", "example": 400
                                },
                                "message": {
                                    "type": "string", "example": "Invalid request body"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "403": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "statusCode": {
                                    "type": "integer", "example": 403
                                },
                                "message": {
                                    "type": "string", "example": "Email is duplicate. You don't have permission to perform this operation!"
                                }
                            }
                        },
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/client/login": {
            "post": {
                "tags": [
                    "login-endpoint"
                ],
                "operationId": "ClientloginUsingPOST",
                "summary": "Login method to get user JWT data",
                "consumes": [
                    "application/json"
                ],
                "description": "Login method used to authenticate user and get JWT token data.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "login",
                        "description": "Request body as following",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string",
                                    "example": "test@test.com"
                                },
                                "password": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string",
                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC..."
                                },
                                "refreshToken": {
                                    "type": "string",
                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC..."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "statusCode": {
                                    "type": "integer", "example": 401
                                },
                                "message": {
                                    "type": "string", "example": "Authentication failed"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/client/extraerData": {
            "post": {
                "tags": [
                    "client-controller"
                ],
                "operationId": "ClientDataUsingPOST",
                "summary": "Metodo para extraer la información de un Cliente",
                "consumes": [
                    "application/json"
                ],
                "description": "Metodo para extraer la información de un Cliente a través de un token JWT",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Access Token JWT",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC..."
                        }
                    },
                    {
                        "in": "header",
                        "name": "refresh-token",
                        "description": "Refresh Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC..."
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string",
                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC..."
                                },
                                "refreshToken": {
                                    "type": "string",
                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC..."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "statusCode": {
                                    "type": "integer", "example": 401
                                },
                                "message": {
                                    "type": "string", "example": "Authentication failed"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/password/olvidoPassword": {
            "post": {
                "tags": [
                    "password-controller"
                ],
                "operationId": "passwordOlvidePOST",
                "summary": "Olvide password metodo",
                "consumes": [
                    "application/json"
                ],
                "description": "Olvide password: metodo que envia correo con código",
                "parameters": [
                    {
                        "in": "body",
                        "name": "passwordOlvide",
                        "description": "Request body as following",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string",
                                    "example": "test@test.com"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string",
                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC..."
                                },
                                "refreshToken": {
                                    "type": "string",
                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC..."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "statusCode": {
                                    "type": "integer", "example": 401
                                },
                                "message": {
                                    "type": "string", "example": "Authentication failed"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/password/cambiarPassword":{
            "post": {
                "tags": [
                    "password-controller"
                ],
                "operationId": "passwordCambiarPOST",
                "summary": "Cambiar password metodo",
                "consumes": [
                    "application/json"
                ],
                "description": "Cambiar password: método que modifica el password con el codigo de verificacion",
                "parameters": [
                    {
                        "in": "body",
                        "name": "passwordCambio",
                        "description": "Request body as following",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "idCliente": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "nuevaContrasenia":{
                                    "type": "string",
                                    "example": "reactivosPassword"
                                },
                                "codigoValidacion":{
                                    "type": "string",
                                    "example": "ABCD1234"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string",
                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC..."
                                },
                                "refreshToken": {
                                    "type": "string",
                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC..."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "statusCode": {
                                    "type": "integer", "example": 401
                                },
                                "message": {
                                    "type": "string", "example": "Authentication failed"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/password/olvidoPasswordWeb": {
            "post": {
                "tags": [
                    "password-controller"
                ],
                "operationId": "passwordOlvideWebPOST",
                "summary": "Olvide password metodo para el sistema web",
                "consumes": [
                    "application/json"
                ],
                "description": "Olvide password web: metodo que envia correo con código",
                "parameters": [
                    {
                        "in": "body",
                        "name": "passwordOlvideWeb",
                        "description": "Request body as following",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string",
                                    "example": "test@test.com"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string",
                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC..."
                                },
                                "refreshToken": {
                                    "type": "string",
                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC..."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "statusCode": {
                                    "type": "integer", "example": 401
                                },
                                "message": {
                                    "type": "string", "example": "Authentication failed"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/password/cambiarPasswordWeb":{
            "post": {
                "tags": [
                    "password-controller"
                ],
                "operationId": "passwordCambiarWebPOST",
                "summary": "Cambiar password metodo para el sistema web",
                "consumes": [
                    "application/json"
                ],
                "description": "Cambiar password web: método que modifica el password con el codigo de verificacion",
                "parameters": [
                    {
                        "in": "body",
                        "name": "passwordCambioWeb",
                        "description": "Request body as following",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "idUsuario": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "nuevaContrasenia":{
                                    "type": "string",
                                    "example": "reactivosPassword"
                                },
                                "codigoValidacion":{
                                    "type": "string",
                                    "example": "ABCD1234"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string",
                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC..."
                                },
                                "refreshToken": {
                                    "type": "string",
                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC..."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "statusCode": {
                                    "type": "integer", "example": 401
                                },
                                "message": {
                                    "type": "string", "example": "Authentication failed"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/cupones/listarcupones?query={sumilladescrip}&page={page}&pageSize={pageSize}": {
            "get": {
                "tags": [
                    "cupon-controller"
                ],
                "operationId": "getCuponsUsingGET",
                "summary": "Get cupon / cupones",
                "consumes": [
                    "application/json"
                ],
                "description": "Fetch al Cupon basado en el parametro. \"20% de dscto\" para unos o \"all\" para traer todos los cupones.",
                "parameters": [
                    {
                        "name": "sumilladescrip",
                        "required": true,
                        "in": "path",
                        "type": "string",
                        "description": "Sumilla o Descripción del cupon"
                    },{
                        "name": "page",
                        "required": false,
                        "in": "path",
                        "type": "integer",
                        "description": "Pagina solicitada"
                    },{
                        "name": "pageSize",
                        "required": false,
                        "in": "path",
                        "type": "integer",
                        "description": "Tamanio de pagina solicitada"
                    },{
                        "in": "header",
                        "name": "authorization",
                        "description": "Access Token JWT",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC..."
                        }
                    },
                    {
                        "in": "header",
                        "name": "refresh-token",
                        "description": "Refresh Token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC..."
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Cupon"
                        },
                        "description": "A JSON array of user information"
                    },
                    "400": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "statusCode": {
                                    "type": "integer", "example": 400
                                },
                                "message": {
                                    "type": "string", "example": "Invalid request body"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "409": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "statusCode": {
                                    "type": "integer", "example": 409
                                },
                                "message": {
                                    "type": "string", "example": "Requested item wasn't found!"
                                }
                            }
                        },
                        "description": "Not Found"
                    }
                }
            }
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "userName": {
                    "type": "string",
                    "example": "Jimmy"
                },
                "email": {
                    "type": "string",
                    "example": "test@test.com"
                },
                "role": {
                    "type": "string",
                    "example": "user"
                },
                "createdAT": {
                    "type":"string",
                    "example": "2022-09-19T09:03:45.281Z"
                },
                "updatedAt": {
                    "type":"string",
                    "example": "2022-09-19T09:03:46.865Z"
                }
            }
        },
        "Client": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "nombre": {
                    "type": "string",
                    "example": "Irving"
                },
                "email": {
                    "type": "string",
                    "example": "test@test.com"
                },
                "telefono": {
                    "type": "string",
                    "example": "913567890"
                },
                "apellidoPaterno": {
                    "type": "string",
                    "example": "Palma"
                },
                "apellidoMaterno": {
                    "type": "string",
                    "example": "Salas"
                },
                "createdAT": {
                    "type":"string",
                    "example": "2022-09-19T09:03:45.281Z"
                },
                "updatedAt": {
                    "type":"string",
                    "example": "2022-09-19T09:03:46.865Z"
                }
            }
        },
        "Cupon": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "fidLocatario": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "fidTipoCupon": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "sumilla": {
                    "type": "string",
                    "example": "20% DE DESCUENTO"
                },
                "descripcionCompleta": {
                    "type": "string",
                    "example": "Ten 20% de descuento en la compra de un corndog en Chung chun"
                },
                "fechaExpiracion": {
                    "type":"string",
                    "example": "2024-06-30 00:00:00"
                },
                "terminosCondiciones": {
                    "type": "string",
                    "example": "Válido solo en Chung chun de Plaza San Miguel, no acumulable con otras promociones"
                },
                "esLimitado": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "costoPuntos": {
                    "type": "integer",
                    "format": "int64",
                    "example": 120
                },
                "cantidadInicial": {
                    "type": "integer",
                    "format": "int64",
                    "example": 100
                },
                "cantidadDisponible": {
                    "type": "integer",
                    "format": "int64",
                    "example": 80
                },
                "ordenPriorizacion": {
                    "type": "integer",
                    "format": "int64",
                    "example": 3
                },
                "rutaFoto": {
                    "type": "string",
                    "example": "www.vsda"
                },
                "activo": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "createdAT": {
                    "type":"string",
                    "example": "2022-09-19T09:03:45.281Z"
                },
                "updatedAt": {
                    "type":"string",
                    "example": "2022-09-19T09:03:46.865Z"
                }
            }
        },
        "InvalidResponse": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}